diff --git a/routing.js b/routing.js
index e8de466..767cfa4 100644
--- a/routing.js
+++ b/routing.js
@@ -6,6 +6,11 @@ module.exports = function (app) {
         res.send("RUNNING SKELETON");
     });
 
+    app.use(function (req, res, next) {
+        console.log("Time:", Date.now());
+        next();
+    });
+
     app.get("/categories", function (req, res) {
         var categories = require("./model").AVAILABLE_CATEGORIES;
         res.send(categories);
@@ -26,13 +31,17 @@ function initShooterRoutings(app) {
     app.delete("/shooter/:id", findShooterByIdAndRemove);
 
     function findAllShooters(req, res) {
-        Shooter.find(function(err, objs) { returnObjectsWhenNoErrorsOccured(err, objs, res); });
+        Shooter.find(function (err, objs) {
+            returnObjectsWhenNoErrorsOccured(err, objs, res);
+        });
     }
 
     function findShooterById(req, res) {
-        Shooter.findById(req.params.id, function(err, objs) { returnObjectsWhenNoErrorsOccured(err, objs, res); });
+        Shooter.findById(req.params.id, function (err, objs) {
+            returnObjectsWhenNoErrorsOccured(err, objs, res);
+        });
+
 
-        
     }
 
     function findShooterByIdAndRemove(req, res) {
@@ -53,7 +62,9 @@ function initResultRoutings(app) {
     function findResultsOfShooter(req, res) {
         Result.find({
             shooter: req.params.id
-        }, function(err, objs) { returnObjectsWhenNoErrorsOccured(err, objs, res); });
+        }, function (err, objs) {
+            returnObjectsWhenNoErrorsOccured(err, objs, res);
+        });
 
     }
 
@@ -82,4 +93,4 @@ function initResultRoutings(app) {
 function returnObjectsWhenNoErrorsOccured(err, objs, res) {
     if (err) res.status(500).send("An error occured: " + err);
     else res.status(200).send(objs);
-}
+}
\ No newline at end of file
